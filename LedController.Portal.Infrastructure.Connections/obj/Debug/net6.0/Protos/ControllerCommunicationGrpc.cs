// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ControllerCommunication.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace LedController.WebPortal.Infrastructure.Connections.Protos {
  internal static partial class Connection
  {
    static readonly string __ServiceName = "controllerCommunication.Connection";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage> __Marshaller_controllerCommunication_KeepAliveMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest> __Marshaller_controllerCommunication_ConnectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse> __Marshaller_controllerCommunication_ConnectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest> __Marshaller_controllerCommunication_DisconnectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse> __Marshaller_controllerCommunication_DisconnectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage, global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage> __Method_KeepAlive = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage, global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "KeepAlive",
        __Marshaller_controllerCommunication_KeepAliveMessage,
        __Marshaller_controllerCommunication_KeepAliveMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse> __Method_Connect = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Connect",
        __Marshaller_controllerCommunication_ConnectRequest,
        __Marshaller_controllerCommunication_ConnectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse> __Method_Disconnect = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Disconnect",
        __Marshaller_controllerCommunication_DisconnectRequest,
        __Marshaller_controllerCommunication_DisconnectResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LedController.WebPortal.Infrastructure.Connections.Protos.ControllerCommunicationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Connection</summary>
    [grpc::BindServiceMethod(typeof(Connection), "BindService")]
    public abstract partial class ConnectionBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage> KeepAlive(global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse> Connect(global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse> Disconnect(global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Connection</summary>
    public partial class ConnectionClient : grpc::ClientBase<ConnectionClient>
    {
      /// <summary>Creates a new client for Connection</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConnectionClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Connection that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConnectionClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConnectionClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConnectionClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage KeepAlive(global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KeepAlive(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage KeepAlive(global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_KeepAlive, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage> KeepAliveAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KeepAliveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage> KeepAliveAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_KeepAlive, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse Connect(global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Connect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse Connect(global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Connect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse> ConnectAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse> ConnectAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Connect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse Disconnect(global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Disconnect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse Disconnect(global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Disconnect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse> DisconnectAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisconnectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse> DisconnectAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Disconnect, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ConnectionClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ConnectionClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ConnectionBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_KeepAlive, serviceImpl.KeepAlive)
          .AddMethod(__Method_Connect, serviceImpl.Connect)
          .AddMethod(__Method_Disconnect, serviceImpl.Disconnect).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ConnectionBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_KeepAlive, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage, global::LedController.WebPortal.Infrastructure.Connections.Protos.KeepAliveMessage>(serviceImpl.KeepAlive));
      serviceBinder.AddMethod(__Method_Connect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.ConnectResponse>(serviceImpl.Connect));
      serviceBinder.AddMethod(__Method_Disconnect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.DisconnectResponse>(serviceImpl.Disconnect));
    }

  }
  internal static partial class DataExchange
  {
    static readonly string __ServiceName = "controllerCommunication.DataExchange";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest> __Marshaller_controllerCommunication_UploadHardwareConfigurationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse> __Marshaller_controllerCommunication_UploadHardwareConfigurationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest> __Marshaller_controllerCommunication_DownloadHardwareConfigurationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse> __Marshaller_controllerCommunication_DownloadHardwareConfigurationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest> __Marshaller_controllerCommunication_UploadAnimationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse> __Marshaller_controllerCommunication_UploadAnimationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest> __Marshaller_controllerCommunication_UploadEffectDefinitionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse> __Marshaller_controllerCommunication_UploadEffectDefinitionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest> __Marshaller_controllerCommunication_GetAnimationInformationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse> __Marshaller_controllerCommunication_GetAnimationINformationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest> __Marshaller_controllerCommunication_GetEffectDefinitionInformationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse> __Marshaller_controllerCommunication_GetEffectDefinitionInformationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse> __Method_UploadHardwareConfiguration = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadHardwareConfiguration",
        __Marshaller_controllerCommunication_UploadHardwareConfigurationRequest,
        __Marshaller_controllerCommunication_UploadHardwareConfigurationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse> __Method_DownloadHardwareConfiguration = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DownloadHardwareConfiguration",
        __Marshaller_controllerCommunication_DownloadHardwareConfigurationRequest,
        __Marshaller_controllerCommunication_DownloadHardwareConfigurationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse> __Method_UploadAnimation = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadAnimation",
        __Marshaller_controllerCommunication_UploadAnimationRequest,
        __Marshaller_controllerCommunication_UploadAnimationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse> __Method_UploadEffectDefinition = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadEffectDefinition",
        __Marshaller_controllerCommunication_UploadEffectDefinitionRequest,
        __Marshaller_controllerCommunication_UploadEffectDefinitionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse> __Method_GetAnimationInformation = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAnimationInformation",
        __Marshaller_controllerCommunication_GetAnimationInformationRequest,
        __Marshaller_controllerCommunication_GetAnimationINformationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse> __Method_GetEffectDefinitionInformation = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEffectDefinitionInformation",
        __Marshaller_controllerCommunication_GetEffectDefinitionInformationRequest,
        __Marshaller_controllerCommunication_GetEffectDefinitionInformationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LedController.WebPortal.Infrastructure.Connections.Protos.ControllerCommunicationReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of DataExchange</summary>
    [grpc::BindServiceMethod(typeof(DataExchange), "BindService")]
    public abstract partial class DataExchangeBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse> UploadHardwareConfiguration(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse> DownloadHardwareConfiguration(global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse> UploadAnimation(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse> UploadEffectDefinition(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse> GetAnimationInformation(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse> GetEffectDefinitionInformation(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataExchange</summary>
    public partial class DataExchangeClient : grpc::ClientBase<DataExchangeClient>
    {
      /// <summary>Creates a new client for DataExchange</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataExchangeClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataExchange that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataExchangeClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataExchangeClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataExchangeClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse UploadHardwareConfiguration(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadHardwareConfiguration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse UploadHardwareConfiguration(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadHardwareConfiguration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse> UploadHardwareConfigurationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadHardwareConfigurationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse> UploadHardwareConfigurationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadHardwareConfiguration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse DownloadHardwareConfiguration(global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadHardwareConfiguration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse DownloadHardwareConfiguration(global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DownloadHardwareConfiguration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse> DownloadHardwareConfigurationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadHardwareConfigurationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse> DownloadHardwareConfigurationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DownloadHardwareConfiguration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse UploadAnimation(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadAnimation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse UploadAnimation(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadAnimation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse> UploadAnimationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadAnimationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse> UploadAnimationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadAnimation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse UploadEffectDefinition(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadEffectDefinition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse UploadEffectDefinition(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadEffectDefinition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse> UploadEffectDefinitionAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadEffectDefinitionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse> UploadEffectDefinitionAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadEffectDefinition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse GetAnimationInformation(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnimationInformation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse GetAnimationInformation(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAnimationInformation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse> GetAnimationInformationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnimationInformationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse> GetAnimationInformationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAnimationInformation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse GetEffectDefinitionInformation(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEffectDefinitionInformation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse GetEffectDefinitionInformation(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEffectDefinitionInformation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse> GetEffectDefinitionInformationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEffectDefinitionInformationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse> GetEffectDefinitionInformationAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEffectDefinitionInformation, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DataExchangeClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataExchangeClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DataExchangeBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_UploadHardwareConfiguration, serviceImpl.UploadHardwareConfiguration)
          .AddMethod(__Method_DownloadHardwareConfiguration, serviceImpl.DownloadHardwareConfiguration)
          .AddMethod(__Method_UploadAnimation, serviceImpl.UploadAnimation)
          .AddMethod(__Method_UploadEffectDefinition, serviceImpl.UploadEffectDefinition)
          .AddMethod(__Method_GetAnimationInformation, serviceImpl.GetAnimationInformation)
          .AddMethod(__Method_GetEffectDefinitionInformation, serviceImpl.GetEffectDefinitionInformation).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DataExchangeBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_UploadHardwareConfiguration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadHardwareConfigurationResponse>(serviceImpl.UploadHardwareConfiguration));
      serviceBinder.AddMethod(__Method_DownloadHardwareConfiguration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.DownloadHardwareConfigurationResponse>(serviceImpl.DownloadHardwareConfiguration));
      serviceBinder.AddMethod(__Method_UploadAnimation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadAnimationResponse>(serviceImpl.UploadAnimation));
      serviceBinder.AddMethod(__Method_UploadEffectDefinition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.UploadEffectDefinitionResponse>(serviceImpl.UploadEffectDefinition));
      serviceBinder.AddMethod(__Method_GetAnimationInformation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationInformationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetAnimationINformationResponse>(serviceImpl.GetAnimationInformation));
      serviceBinder.AddMethod(__Method_GetEffectDefinitionInformation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.GetEffectDefinitionInformationResponse>(serviceImpl.GetEffectDefinitionInformation));
    }

  }
  internal static partial class Actions
  {
    static readonly string __ServiceName = "controllerCommunication.Actions";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest> __Marshaller_controllerCommunication_PlayAnimationOnLedstripRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse> __Marshaller_controllerCommunication_PlayAnimationOnLedstripResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest> __Marshaller_controllerCommunication_StopAnimationOnLedstripRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse> __Marshaller_controllerCommunication_StopAnimationOnLedstripResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest> __Marshaller_controllerCommunication_TestLedstripRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse> __Marshaller_controllerCommunication_TestLedstripResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse> __Method_PlayAnimationOnLedstrip = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlayAnimationOnLedstrip",
        __Marshaller_controllerCommunication_PlayAnimationOnLedstripRequest,
        __Marshaller_controllerCommunication_PlayAnimationOnLedstripResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse> __Method_StopAnimationOnLedstrip = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopAnimationOnLedstrip",
        __Marshaller_controllerCommunication_StopAnimationOnLedstripRequest,
        __Marshaller_controllerCommunication_StopAnimationOnLedstripResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse> __Method_TestLedstrip = new grpc::Method<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestLedstrip",
        __Marshaller_controllerCommunication_TestLedstripRequest,
        __Marshaller_controllerCommunication_TestLedstripResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LedController.WebPortal.Infrastructure.Connections.Protos.ControllerCommunicationReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of Actions</summary>
    [grpc::BindServiceMethod(typeof(Actions), "BindService")]
    public abstract partial class ActionsBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse> PlayAnimationOnLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse> StopAnimationOnLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse> TestLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Actions</summary>
    public partial class ActionsClient : grpc::ClientBase<ActionsClient>
    {
      /// <summary>Creates a new client for Actions</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ActionsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Actions that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ActionsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ActionsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ActionsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse PlayAnimationOnLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlayAnimationOnLedstrip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse PlayAnimationOnLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlayAnimationOnLedstrip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse> PlayAnimationOnLedstripAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlayAnimationOnLedstripAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse> PlayAnimationOnLedstripAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlayAnimationOnLedstrip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse StopAnimationOnLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAnimationOnLedstrip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse StopAnimationOnLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopAnimationOnLedstrip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse> StopAnimationOnLedstripAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAnimationOnLedstripAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse> StopAnimationOnLedstripAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopAnimationOnLedstrip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse TestLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestLedstrip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse TestLedstrip(global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestLedstrip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse> TestLedstripAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestLedstripAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse> TestLedstripAsync(global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestLedstrip, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ActionsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ActionsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ActionsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PlayAnimationOnLedstrip, serviceImpl.PlayAnimationOnLedstrip)
          .AddMethod(__Method_StopAnimationOnLedstrip, serviceImpl.StopAnimationOnLedstrip)
          .AddMethod(__Method_TestLedstrip, serviceImpl.TestLedstrip).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ActionsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PlayAnimationOnLedstrip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.PlayAnimationOnLedstripResponse>(serviceImpl.PlayAnimationOnLedstrip));
      serviceBinder.AddMethod(__Method_StopAnimationOnLedstrip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.StopAnimationOnLedstripResponse>(serviceImpl.StopAnimationOnLedstrip));
      serviceBinder.AddMethod(__Method_TestLedstrip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripRequest, global::LedController.WebPortal.Infrastructure.Connections.Protos.TestLedstripResponse>(serviceImpl.TestLedstrip));
    }

  }
}
#endregion
